from flask import Flask, request, jsonify
from Gestion import Student, Course, Enrollment
from data import students, courses

app = Flask(name)  # Cr√©er le site flask pr l'api

@app.route('/students', methods=['POST'])
def create_student():
    """Fonction qui rajoute un nouvau √©l√®ve"""

    data = request.get_json()  # R√©cup les info envoy√© par l'utilisateur
    student = Student(data['name'], data['studentID'], data['age'])  # Cr√©er un nouvau √©l√®ve
    students[data['studentID']] = student  # Le met dans la liste des √©l√®ves
    return jsonify({"message": "Etudiant cr√©√© avec succ√®s "}), 201  # Dit que √ßa a march√©


@app.route('/courses', methods=['POST'])
def create_course():
    """Fonction qui rajoute un nouvau cours"""

    data = request.get_json()  # R√©cup les info sur le cours
    course = Course(data['courseName'], data['courseCode'], data['creditHours'])  # Cr√©er un nouvau cours
    courses[data['courseCode']] = course  # Ajoute le cour a la liste
    return jsonify({"message": "Cour cr√©√© avec succ√®s "}), 201  # Dit que c bon


@app.route('/enrollments', methods=['POST'])
def enroll_student():
    """Fonction qui met un √©l√®ve dans un cours"""

    data = request.get_json()  # R√©cup les info
    student = students.get(data['studentID'])  # Cherche l'√©l√®ve
    course = courses.get(data['courseCode'])  # Cherche le cours
    if student and course:  # Si l'es 2 existe
        course.enrollStudent(student)  # On met l'√©l√®ve dan le cours
        return jsonify({"message": "√âtudiant inscrit avec succ√®s"}), 201  # C bon
    return jsonify({"error": "Etudiant ou cour introuvable"}), 404  # Si ya un pb


@app.route('/students/<studentID>', methods=['GET'])
def get_student(studentID):
    """Fonction qui r√©cup les info d'un √©l√®ve"""

    student = students.get(studentID)  # Cherche l'√©l√®ve
    if student:
        return jsonify({
            "name": student.name,  # Donne son nom
            "age": student.age,  # Son age
            "average_grade": student.getAverageGrade()  # Sa moyenne
        })
    return jsonify({"error": "√âtudiant introuvable"}), 404  # Si il existe pas


@app.route('/courses/<courseCode>', methods=['GET'])
def get_course(courseCode):
    """Fonction qui r√©cup les info d'un cours"""

    course = courses.get(courseCode)  # Cherche le cours
    if course:
        return jsonify({
            "courseName": course.courseName,  # Nom du cours
            "enrolled_students": course.getEnrolledStudents()  # Liste des √©l√®ves qui son dedans
        })
    return jsonify({"error": "Cours introuvable"}), 404  


@app.route('/')
def home():
    """Page d'accueil"""
    return "Bienvenue sur mon API Flask üöÄ"  # Message d'accueil


if name == 'main':  # Si on lance le fichier
    app.run(debug=True)  # D√©marre l'api en mode debug pr voir les erreurs
